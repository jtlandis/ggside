[{"path":"https://jtlandis.github.io/ggside/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 ggside authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jtlandis.github.io/ggside/articles/ggside_aes_mapping.html","id":"side-geometries-with-functionality","dir":"Articles","previous_headings":"","what":"Side Geometries With Functionality","title":"Global Aesthetics Mappings and Side Geometries","text":"following geom_*side* geometries updated default expected behavior easier use. geom_*sidedensity geom_*sidebar geom_*sidefreqpoly geom_*sidehistogram can applied geometries stat \"identity\" default_aes. geometries orientation parameter, can control aesthetic inherited. geom_*sideboxplot geom_*sideviolin included update orientation largely depends aesthetic mapping layer, two geometries go either way depending position scales x y. geom_*side* geometries need mappings explicitly assigned try inherit global mapping (long inherit.aes = TRUE).","code":""},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"ggside","dir":"Articles","previous_headings":"","what":"ggside","title":"ggside walkthrough","text":"package ggside designed enable users add metadata ggplots ease. adding metadata information extremely difficult geom_tile geoms, can frustrating user positioning geometries away main plot. Additionally, user wants use color guide fill aesthetic, may run conflicts one layer uses discrete scale another uses continuous scale.","code":""},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"ggside walkthrough","text":"Lets look simple example set using dplyr summarise diamonds dataset.  can see, trying place colorbar causes error previous geom_tile call already mapped mean Price fill deemed scale continuous. Thus categorical variable unable map fill aesthetic anymore. However, map another continuous variable, place guide, shifting limits washing color.  Using ggside allows aesthetics mapped separate scale, can also controlled scale_*fill_gradient functions (later).    Unfortunately using xfill yfill geom_xsidetile geom_ysidetile respectively lock associated scale first layer. first assign yfill discrete scale add layer yfill maps continuous variable vise versa. example, following code still produces error. largely due original motivation making package, least ggside can give ease plotting information sides main figure.","code":"summariseDiamond <- diamonds %>%   mutate(`Cut Clarity` = paste(cut, clarity)) %>%   group_by(`Cut Clarity`,cut, clarity, color) %>%   summarise(n = n(),             `mean Price` = mean(price),             sd = sd(price)) #> `summarise()` has grouped output by 'Cut Clarity', 'cut', 'clarity'. You can #> override using the `.groups` argument. ggplot(summariseDiamond, aes(x = color, y = `Cut Clarity`)) +   geom_tile(aes(fill = `mean Price`)) p <-ggplot(summariseDiamond, aes(x = color, y = `Cut Clarity`)) +   geom_tile(aes(fill = `mean Price`)) +   geom_tile(aes(x=0, fill = cut))  p summariseDiamond <- summariseDiamond %>%   group_by(`Cut Clarity`) %>%   mutate(`sd of means` = sd(`mean Price`))  ggplot(summariseDiamond, aes(x = color, y = `Cut Clarity`)) +   geom_tile(aes(fill = `mean Price`)) +   geom_tile(aes(x=0, fill = `sd of means`)) ggplot(summariseDiamond, aes(x = color, y = `Cut Clarity`)) +   geom_tile(aes(fill = `mean Price`)) +   geom_ysidetile(aes(x = \"sd of means\", yfill = `sd of means`))  +   scale_yfill_gradient(low =\"#FFFFFF\", high = \"#0000FF\") ggplot(summariseDiamond, aes(x = color, y = `Cut Clarity`)) +   geom_tile(aes(fill = `mean Price`)) +   geom_ysidetile(aes(x = \"max\", yfill = after_stat(summarise),                      domain = `mean Price`), stat = \"summarise\", fun = max) +   geom_ysidetile(aes(x = \"mean\",yfill = after_stat(summarise),                      domain = `mean Price`), stat = \"summarise\", fun = mean) +   geom_ysidetile(aes(x = \"median\",yfill = after_stat(summarise),                      domain = `mean Price`), stat = \"summarise\", fun = median) +   geom_ysidetile(aes(x = \"min\",yfill = after_stat(summarise),                      domain = `mean Price`), stat = \"summarise\", fun = min) +   scale_yfill_gradient(low =\"#FFFFFF\", high = \"#0000FF\") .tmp <- summariseDiamond %>% group_by(`Cut Clarity`) %>%   summarise_at(vars(`mean Price`),.funs = list(max,median,mean,min)) %>%   tidyr::gather(key = key, value = value, -`Cut Clarity`)  ggplot(summariseDiamond, aes(x = color, y = `Cut Clarity`)) +   geom_tile(aes(fill = `mean Price`)) +   geom_ysidetile(data = .tmp, aes(x = key, yfill = value)) +   scale_yfill_gradient(low =\"#FFFFFF\", high = \"#0000FF\") p <- ggplot(summariseDiamond, aes(x = color, y = `Cut Clarity`)) +   geom_tile(aes(fill = `mean Price`)) +   geom_ysidetile(aes(yfill = `sd of means`)) + #sets yfill to a continuous scale   geom_ysidetile(aes(yfill = cut)) #attempting to add discrete color values  p"},{"path":[]},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"geom","dir":"Articles","previous_headings":"How to Use","what":"Geom","title":"ggside walkthrough","text":"geom_xside* geom_yside* extend ggplot2::Geom* environments. may expect, geom_xside* allows place geometries along x-axis geom_yside* allows placement along y-axis. geom_*side* functions provide variation color aesthetics colour/fill. variants named xcolour xfill ycolour yfill respective xside yside geoms. aesthetics take precedence general counterpart assigned. allows certain geoms plotted different color scales - particularly useful one requires discrete scale another requires discrete scale.","code":""},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"available-geoms","dir":"Articles","previous_headings":"How to Use > Geom","what":"Available Geoms","title":"ggside walkthrough","text":"following geoms currently available use right away ggside package. following ggproto Geom*’s total clones GeomXside* GeomYside* variations additional color aesthetics. geom_*side* functions return ggside_layer object. ggside_layer added ggplot, plot transformed ggside object different ggplot_build S3 method. method allows side geoms plotted separate panel. GeomBar GeomBoxplot GeomDensity GeomFreqpoly GeomHistogram GeomLine GeomPath GeomPoint GeomText GeomTile GeomViolin","code":""},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"facets","dir":"Articles","previous_headings":"How to Use","what":"Facets","title":"ggside walkthrough","text":"Technically speaking ggside’s main workhorse hacking Facet framework. Whenever standard ggplot object converted ggside object, current Facet ggproto class replaced one compatible ggside. geom*side variants plotted panel adjacent axis name implies. vanilla ggplot2 geometries plotted main panel.","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"xlayer-and-ylayer","dir":"Articles","previous_headings":"How to Use > Facets > How its done","what":"XLayer and YLayer","title":"ggside walkthrough","text":"geom_*side* variants function return XLayer YLayer extends ggplot2:::Layer. Currently, Layer$setup_layer overwritten add column PANEL_TYPE data. column contain \"x\", \"y\" help map data correct panel. Data missing PANEL_TYPE column (containing values \"x\" \"y\") assumed mapped main panel. values PANEL_TYPE help predict extra panels needed drawn per main panel produced original Facet class ggplot holds.","code":""},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"facet","dir":"Articles","previous_headings":"How to Use > Facets > How its done","what":"Facet","title":"ggside walkthrough","text":"Three main methods overwritten order make ggside work. compute_layout, map_data, draw_panels. compute_layout first call base Facet’s method, build panels based attached ggside object. map_data take extra care ensure data mapped proper panel using PANEL_TYPE well facet variables passed. draw_panels responsible rendering panels correctly.","code":""},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"extending","dir":"Articles","previous_headings":"How to Use > Facets > How its done","what":"Extending","title":"ggside walkthrough","text":"Currently, ggside works ggplot2’s three base facet classes, FacetNull, FacetWrap FacetGrid. wish extend ggside another package’s custom facet function, must also export as_ggsideFacet S3 method, called ggplot converted ggside whenever new facet added plot. method return ggproto object inherits Facet group. Helpful computed variables layout object PANEL_TYPE indicates PANEL expects side geom default geom, PANEL_GROUP helps clarify PANEL’s grouped together facet. additional computed variables ggside object passed params information needed help draw panels custom facet ggside.","code":""},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"examples-with-facets","dir":"Articles","previous_headings":"How to Use > Facets","what":"Examples with Facets","title":"ggside walkthrough","text":"control sideFacets handled may done ggside function.  using multiple panels, may handy collapse side panels one side, helps save space computation time!     Note collapsing panels FacetGrid, panels appear strips whereas FacetWrap appear strips. FacetWrap, collapsing panels column row may share facet variable, confusing since strip represent data entirely. case FacetGrid since row column dictated facet variable. Collapsing x y coerces panels column row scale, thus scales = \"free_x\" incompatible collapse = \"x\".  may also change size side panels theme elements ggside.panel.scale, ggside.panel.scale.x ggside.panel.scale.y. theme elements take positive numeric value input indicate large side panel’s heights widths relative main plot’s height width. example, setting ggside.panel.scale.x = 1 mean x side panels height equal size main panel’s heights (x collapsed, equal sum heights).","code":"i2 <- iris %>%   mutate(Species2 = rep(c(\"A\",\"B\"), 75)) p <- ggplot(i2, aes(Sepal.Width, Sepal.Length, color = Species)) +   geom_point() p2 <- p + geom_xsidedensity(aes(y = after_stat(density))) +   geom_ysidedensity(aes(x = after_stat(density))) +   theme_bw() p2 + labs(title = \"FacetNull\") p2 + facet_wrap(Species~Species2) +   labs(title = \"FacetWrap\") +   guides(x = guide_axis(check.overlap = T)) p2 + facet_grid(Species~Species2, space = \"free\", scale = \"free_y\") p2 + ggside(x.pos = \"bottom\", y.pos = \"left\") +   labs(title = \"FacetNull\", subtitle = \"Xside placed bottom, Yside placed left\") p2 + facet_wrap(Species~Species2) +   labs(title = \"FacetWrap\", subtitle = \"Collapsing X side Panels\") +   ggside(collapse = \"x\") p2 + facet_grid(Species~Species2, space = \"free\", scales = \"free\") +   labs(title = \"FacetGrid\", subtitle = \"Collapsing All Side Panels\") +   ggside(collapse = \"all\") p + geom_xsidedensity(aes(y=after_stat(density)))+   geom_ysidedensity(aes(x=after_stat(density), ycolor = Species2)) +   theme_bw() +    facet_grid(Species~Species2, space = \"free\", scales = \"free\") +   labs(title = \"FacetGrid\", subtitle = \"Collapsing All Side Panels\") +   ggside(collapse = \"all\") p + geom_xsidedensity(aes(y=after_stat(density), xfill = Species), position = \"stack\")+   geom_ysidedensity(aes(x=after_stat(density), yfill = Species2), position = \"stack\") +   theme_bw() +    facet_grid(Species~Species2, space = \"free\", scales = \"free\") +   labs(title = \"FacetGrid\", subtitle = \"Collapsing All Side Panels\") +   ggside(collapse = \"all\") +   scale_xfill_manual(values = c(\"darkred\",\"darkgreen\",\"darkblue\")) +   scale_yfill_manual(values = c(\"black\",\"gold\")) p2 + facet_wrap(Species~Species2, scales = \"free\") +   labs(title = \"FacetWrap\", subtitle = \"Collapsing X side Panels\") +   ggside(collapse = \"x\")  #> Warning: free x scales is not compatible with collapse x. Assigning new x #> scales. p2 + facet_grid(Species~Species2, space = \"free\", scales = \"free\") +   labs(title = \"FacetGrid\", subtitle = \"Collapsing X Side Panels and \\nAdjusted Side Panel Relative Size\") +   ggside(collapse = \"all\", x.pos = \"bottom\", scales = \"free_x\",          respect_side_labels = \"y\") +   theme(ggside.panel.scale.x = .4,         ggside.panel.scale.y = .25)"},{"path":"https://jtlandis.github.io/ggside/articles/ggside_basic_usage.html","id":"specifying-ggside-axes","dir":"Articles","previous_headings":"","what":"Specifying ggside Axes","title":"ggside walkthrough","text":"ggside (>= 0.1.0) can now control side axis render. example, making xside geometry, x-axis shared main panel can specify x-axis rendered via scale_x_* functions. Prior ggside (>= 0.1.0) control y-axis xside panel. Now, can use scale_xsidey_(continuous|discrete) functions specify scale. Similarly, can x-axis yside panel scale_ysidex_(continuous|discrete) functions. intents purposes, identical scale_(x|y)_* functions affect xside yside panel’s non-shared axis. Additionally, allows mix continuous discrete scales y x axis. example main panel y axis may continuous side panel y axis may discrete. Take following example possible prior version: Now can provide plot proper scale panel expect. can use guide argument new scale functions customize text rendered, breaks argument control location visibility tick marks.","code":"ggplot(mpg, aes(displ, hwy, colour = class)) +    geom_point(size = 2) +   geom_xsideboxplot(aes(y =class), orientation = \"y\") +   geom_ysidedensity(aes(x = after_stat(density)), position = \"stack\") +   theme(ggside.panel.scale = .3) ggplot(mpg, aes(displ, hwy, colour = class)) +    geom_point(size = 2) +   geom_xsideboxplot(aes(y =class), orientation = \"y\") +   geom_ysidedensity(aes(x = after_stat(density)), position = \"stack\") +   theme(ggside.panel.scale = .3) +   scale_xsidey_discrete() +   scale_ysidex_continuous(guide = guide_axis(angle = 90), minor_breaks = NULL)"},{"path":"https://jtlandis.github.io/ggside/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Justin Landis. Author, maintainer.","code":""},{"path":"https://jtlandis.github.io/ggside/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Landis J (2025). ggside: Side Grammar Graphics. R package version 0.4.0, https://github.com/jtlandis/ggside.","code":"@Manual{,   title = {ggside: Side Grammar Graphics},   author = {Justin Landis},   year = {2025},   note = {R package version 0.4.0},   url = {https://github.com/jtlandis/ggside}, }"},{"path":"https://jtlandis.github.io/ggside/index.html","id":"readme","dir":"","previous_headings":"","what":"Side Grammar Graphics","title":"Side Grammar Graphics","text":"Justin Landis 2025-09-12","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Side Grammar Graphics","text":"R package ggside expands ggplot2 package. package allows user add graphical information one main panel’s axis. particularly useful metadata discrete axis, summary graphics continuous axis boxplot density distribution.","code":""},{"path":"https://jtlandis.github.io/ggside/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Side Grammar Graphics","text":"Please install CRAN latest stable version ggside. can also install Github seen .","code":"#CRAN utils::install.packages(\"ggside\") #Github devtools::install_github(\"jtlandis/ggside\")"},{"path":"https://jtlandis.github.io/ggside/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Side Grammar Graphics","text":"Using package similar adding additional layer ggplot. geometries supported ggside follow pattern like geom_xside* geom_yside* add geometry either x side panel y side panel respectively. add geom_xsidedensity plot, places density geometry panel positioned default main panel. panel share x axis main panel independent y axis. Take following example ggplot2 readme.  version 0.3.0 longer need use scale_(y|x)side(x|y)_*() mix discrete continuous axes. ggside geom’s default positional aesthetics x y aesthetics prepended ysidex xsidey respectively hood. Now may mix discrete continuous axes ease.  version 0.2.0, theme elements allow better control side panels rendered.  detailed guide please see vignette('ggside_basic_usage') information.","code":"library(ggplot2) library(ggside)  ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point(size = 2) +   geom_xsidedensity(aes(y = after_stat(density)), position = \"stack\") +   geom_ysidedensity(aes(x = after_stat(density)), position = \"stack\") +   theme(axis.text.x = element_text(angle = 90, vjust = .5)) ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point(size = 2) +   geom_xsideboxplot(aes(y =class), orientation = \"y\") +   geom_ysidedensity(aes(x = after_stat(density)), position = \"stack\") +   scale_ysidex_continuous(guide = guide_axis(angle = 90), minor_breaks = NULL) +   theme(ggside.panel.scale = .3) ggplot(iris, aes(Sepal.Width, Sepal.Length, fill = Species)) +   geom_point(aes(color = Species)) +   geom_xsidedensity(alpha = .3, position = \"stack\") +   geom_ysideboxplot(aes(x = Species), orientation = \"x\") +   scale_ysidex_discrete(guide = guide_axis(angle = 45)) +   theme_dark() +   theme(ggside.panel.scale = .3,         ggside.panel.border = element_rect(NA, \"red\", linewidth = 2),         ggside.panel.grid = element_line(\"black\", linewidth = .1, linetype = \"dotted\"),         ggside.panel.background = element_blank()) +   guides(color = \"none\", fill = \"none\")"},{"path":"https://jtlandis.github.io/ggside/index.html","id":"issues-and-bug-reporting","dir":"","previous_headings":"","what":"Issues and Bug Reporting","title":"Side Grammar Graphics","text":"find issues want suggest enhancement, please make post jtlandis/ggside.","code":""},{"path":"https://jtlandis.github.io/ggside/index.html","id":"known-issues","dir":"","previous_headings":"","what":"Known Issues","title":"Side Grammar Graphics","text":"following section summarize issues present current CRAN release. either fixed main branch git repository, currently development fixed one development branches. current CRAN version ggside v0.4.0.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/as_ggside.html","id":null,"dir":"Reference","previous_headings":"","what":"Explicit conversion to ggside object — as_ggside","title":"Explicit conversion to ggside object — as_ggside","text":"Function exported possible extensions ggside. ggplot2 objects implicitly converted ggside objects 'adding' ggside object ggside_layer object.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/as_ggside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explicit conversion to ggside object — as_ggside","text":"","code":"as_ggside(x, ...)  # Default S3 method as_ggside(x, ...)  # S3 method for class 'ggplot' as_ggside(x, ggside = NULL, ...)  # S3 method for class '`ggside::ggside`' as_ggside(x, ggside = NULL, ...)  # S3 method for class 'ggside' as_ggside(x, ggside = NULL, ...)"},{"path":"https://jtlandis.github.io/ggside/reference/as_ggside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explicit conversion to ggside object — as_ggside","text":"x object convert ... unused argument ggside new ggside object add","code":""},{"path":"https://jtlandis.github.io/ggside/reference/class_definitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Definitions — class_definitions","title":"Class Definitions — class_definitions","text":"documentation provides overview S7 ggproto classes used ggside package.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/class_definitions.html","id":"ggproto-classes","dir":"Reference","previous_headings":"","what":"ggproto classes","title":"Class Definitions — class_definitions","text":"class_ggside_opt subclass class_ggproto described ggside-options documentation. class_ggside_layer subclass class_ggproto described ggside-layers documentation. class_ggside_scale subclass class_ggproto described ggside-scales documentation.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/class_definitions.html","id":"s-classes","dir":"Reference","previous_headings":"","what":"S7 classes","title":"Class Definitions — class_definitions","text":"class_ggside subclass ggplot2's class_ggplot used represent ggplot object ggside options.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideabline.html","id":null,"dir":"Reference","previous_headings":"","what":"Side Reference lines — geom_xsideabline","title":"Side Reference lines — geom_xsideabline","text":"xside yside variants geom_abline, geom_hline geom_vline geom_*abline, geom_*hline, geom_*vline.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideabline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side Reference lines — geom_xsideabline","text":"","code":"geom_xsideabline(   mapping = NULL,   data = NULL,   ...,   slope,   intercept,   na.rm = FALSE,   show.legend = NA )  geom_ysideabline(   mapping = NULL,   data = NULL,   ...,   slope,   intercept,   na.rm = FALSE,   show.legend = NA )  geom_xsidehline(   mapping = NULL,   data = NULL,   position = \"identity\",   ...,   yintercept,   na.rm = FALSE,   show.legend = NA )  geom_ysidehline(   mapping = NULL,   data = NULL,   position = \"identity\",   ...,   yintercept,   na.rm = FALSE,   show.legend = NA )  geom_xsidevline(   mapping = NULL,   data = NULL,   position = \"identity\",   ...,   xintercept,   na.rm = FALSE,   show.legend = NA )  geom_ysidevline(   mapping = NULL,   data = NULL,   position = \"identity\",   ...,   xintercept,   na.rm = FALSE,   show.legend = NA )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideabline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side Reference lines — geom_xsideabline","text":"mapping Set aesthetic mappings created aes(). data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. xintercept, yintercept, slope, intercept Parameters control position line specifically xside yside variants. set, data, mapping show.legend overridden.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Side bar Charts — geom_xsidebar","title":"Side bar Charts — geom_xsidebar","text":"xside yside variants geom_bar geom_xsidebar geom_ysidebar. variants inherit geom_bar differ plot data relative main panels. xside yside variants geom_col geom_xsidecol geom_ysidecol. variants inherit geom_col differ plot data relative main panels.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side bar Charts — geom_xsidebar","text":"","code":"geom_xsidebar(   mapping = NULL,   data = NULL,   stat = \"count\",   position = \"stack\",   ...,   just = 0.5,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   orientation = \"x\" )  geom_ysidebar(   mapping = NULL,   data = NULL,   stat = \"count\",   position = \"stack\",   ...,   just = 0.5,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   orientation = \"y\" )  geom_xsidecol(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"stack\",   ...,   just = 0.5,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysidecol(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"stack\",   ...,   just = 0.5,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   orientation = \"y\" )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side bar Charts — geom_xsidebar","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. just Adjustment column placement. Set 0.5 default, meaning columns centered axis breaks. Set 0 1 place columns left/right axis breaks. Note argument may unintended behaviour used alternative positions, e.g. position_dodge(). lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidebar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side bar Charts — geom_xsidebar","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidebar.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Side bar Charts — geom_xsidebar","text":"Required aesthetics bold. x y fill xfill Fill color xsidebar fill yfill Fill color ysidebar width specifies width bar height specifies height bar alpha Transparency level xfill yfill size size border line.","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side bar Charts — geom_xsidebar","text":"","code":"p <-ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species, fill = Species)) + geom_point()  #sidebar - uses StatCount p + geom_xsidebar() + geom_ysidebar()   #sidecol - uses Global mapping p +   geom_xsidecol() +   geom_ysidecol()"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideboxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Side boxplots — geom_xsideboxplot","title":"Side boxplots — geom_xsideboxplot","text":"xside yside variants geom_boxplot geom_xsideboxplot geom_ysideboxplot.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideboxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side boxplots — geom_xsideboxplot","text":"","code":"geom_xsideboxplot(   mapping = NULL,   data = NULL,   stat = \"boxplot\",   position = \"dodge2\",   ...,   outliers = TRUE,   outlier.colour = NULL,   outlier.color = NULL,   outlier.fill = NULL,   outlier.shape = NULL,   outlier.size = NULL,   outlier.stroke = 0.5,   outlier.alpha = NULL,   whisker.colour = NULL,   whisker.color = NULL,   whisker.linetype = NULL,   whisker.linewidth = NULL,   staple.colour = NULL,   staple.color = NULL,   staple.linetype = NULL,   staple.linewidth = NULL,   median.colour = NULL,   median.color = NULL,   median.linetype = NULL,   median.linewidth = NULL,   box.colour = NULL,   box.color = NULL,   box.linetype = NULL,   box.linewidth = NULL,   notch = FALSE,   notchwidth = 0.5,   staplewidth = 0,   varwidth = FALSE,   na.rm = FALSE,   orientation = \"x\",   show.legend = NA,   inherit.aes = TRUE )  geom_ysideboxplot(   mapping = NULL,   data = NULL,   stat = \"boxplot\",   position = \"dodge2\",   ...,   outliers = TRUE,   outlier.colour = NULL,   outlier.color = NULL,   outlier.fill = NULL,   outlier.shape = NULL,   outlier.size = NULL,   outlier.stroke = 0.5,   outlier.alpha = NULL,   whisker.colour = NULL,   whisker.color = NULL,   whisker.linetype = NULL,   whisker.linewidth = NULL,   staple.colour = NULL,   staple.color = NULL,   staple.linetype = NULL,   staple.linewidth = NULL,   median.colour = NULL,   median.color = NULL,   median.linetype = NULL,   median.linewidth = NULL,   box.colour = NULL,   box.color = NULL,   box.linetype = NULL,   box.linewidth = NULL,   notch = FALSE,   notchwidth = 0.5,   staplewidth = 0,   varwidth = FALSE,   na.rm = FALSE,   orientation = \"y\",   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideboxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side boxplots — geom_xsideboxplot","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. outliers Whether display (TRUE) discard (FALSE) outliers plot. Hiding discarding outliers can useful , example, raw data points need displayed top boxplot. discarding outliers, axis limits adapt box whiskers , full data range. outliers need hidden axes needs show full data range, please use outlier.shape = NA instead. outlier.colour, outlier.color, outlier.fill, outlier.shape, outlier.size, outlier.stroke, outlier.alpha Default aesthetics outliers. Set NULL inherit data's aesthetics. whisker.colour, whisker.color, whisker.linetype, whisker.linewidth Default aesthetics whiskers. Set NULL inherit data's aesthetics. staple.colour, staple.color, staple.linetype, staple.linewidth Default aesthetics staples. Set NULL inherit data's aesthetics. Note staples appear unless staplewidth argument set non-zero size. median.colour, median.color, median.linetype, median.linewidth Default aesthetics median line. Set NULL inherit data's aesthetics. box.colour, box.color, box.linetype, box.linewidth Default aesthetics boxes. Set NULL inherit data's aesthetics. notch FALSE (default) make standard box plot. TRUE, make notched box plot. Notches used compare groups; notches two boxes overlap, suggests medians significantly different. notchwidth notched box plot, width notch relative body (defaults notchwidth = 0.5). staplewidth relative width staples width box. Staples mark ends whiskers line. varwidth FALSE (default) make standard box plot. TRUE, boxes drawn widths proportional square-roots number observations groups (possibly weighted, using weight aesthetic). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideboxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side boxplots — geom_xsideboxplot","text":"XLayer YLayer object added ggplot object","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideboxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side boxplots — geom_xsideboxplot","text":"","code":"df <- expand.grid(UpperCase = LETTERS, LowerCase = letters) df$Combo_Index <- as.integer(df$UpperCase)*as.integer(df$LowerCase)  p1 <- ggplot(df, aes(UpperCase, LowerCase)) + geom_tile(aes(fill = Combo_Index))  #sideboxplots  p1 + geom_xsideboxplot(aes(y = Combo_Index)) +    geom_ysideboxplot(aes(x = Combo_Index)) +    #when mixing continuous/discrete scales    #use the following helper functions    scale_xsidey_continuous() +    scale_ysidex_continuous()   #sideboxplots with swapped orientation #Note: They order of the layers are affects the default # scale type. If you were to omit the last two scales, the # data labels may be affected ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +     geom_xsideboxplot(aes(y = Species), orientation = \"y\") +     geom_point() +     scale_y_continuous() + scale_xsidey_discrete()   #If using the scale_(xsidey|ysidex)_* functions are a bit cumbersome, # Take extra care to recast your data types. ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species))+   geom_point() +   geom_xsideboxplot(aes(y = as.numeric(Species)), orientation = \"y\") +   geom_ysideboxplot(aes(x = as.numeric(Species)), orientation = \"x\")"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidedensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Side density distributions — geom_xsidedensity","title":"Side density distributions — geom_xsidedensity","text":"xside yside variants geom_density geom_xsidedensity geom_ysidedensity.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidedensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side density distributions — geom_xsidedensity","text":"","code":"geom_xsidedensity(   mapping = NULL,   data = NULL,   stat = \"density\",   position = \"identity\",   ...,   outline.type = \"upper\",   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   orientation = \"x\" )  geom_ysidedensity(   mapping = NULL,   data = NULL,   stat = \"density\",   position = \"identity\",   ...,   outline.type = \"upper\",   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   orientation = \"y\" )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidedensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side density distributions — geom_xsidedensity","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat Use override default connection geom_density() stat_density(). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. outline.type Type outline area; \"\" draws upper lower lines, \"upper\"/\"lower\" draws respective lines . \"full\" draws closed polygon around area. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidedensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side density distributions — geom_xsidedensity","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidedensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side density distributions — geom_xsidedensity","text":"","code":"ggplot(mpg, aes(displ, hwy, colour = class)) +  geom_point(size = 2) +  geom_xsidedensity() +  geom_ysidedensity() +  theme(axis.text.x = element_text(angle = 90, vjust = .5))   ggplot(mpg, aes(displ, hwy, colour = class)) +  geom_point(size = 2) +  geom_xsidedensity(aes(y = after_stat(count)),position = \"stack\") +  geom_ysidedensity(aes(x = after_stat(scaled))) +  theme(axis.text.x = element_text(angle = 90, vjust = .5))"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefreqpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Side Frequency Polygons — geom_xsidefreqpoly","title":"Side Frequency Polygons — geom_xsidefreqpoly","text":"xside yside variants geom_freqpoly geom_xsidefreqpoly geom_ysidefreqpoly.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefreqpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side Frequency Polygons — geom_xsidefreqpoly","text":"","code":"geom_xsidefreqpoly(   mapping = NULL,   data = NULL,   stat = \"bin\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   orientation = \"x\" )  geom_ysidefreqpoly(   mapping = NULL,   data = NULL,   stat = \"bin\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   orientation = \"y\" )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefreqpoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side Frequency Polygons — geom_xsidefreqpoly","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefreqpoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side Frequency Polygons — geom_xsidefreqpoly","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefreqpoly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side Frequency Polygons — geom_xsidefreqpoly","text":"","code":"ggplot(diamonds, aes(price, carat, colour = cut)) +    geom_point() +    geom_xsidefreqpoly(aes(y=after_stat(count)),binwidth = 500) +    geom_ysidefreqpoly(aes(x=after_stat(count)),binwidth = .2)"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Side function plot — geom_xsidefunction","title":"Side function plot — geom_xsidefunction","text":"xside yside variants geom_function","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side function plot — geom_xsidefunction","text":"","code":"geom_xsidefunction(   mapping = NULL,   data = NULL,   stat = \"function\",   position = \"identity\",   ...,   arrow = NULL,   arrow.fill = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_xsidefunction(   mapping = NULL,   data = NULL,   geom = \"function\",   position = \"identity\",   ...,   fun,   xlim = NULL,   n = 101,   args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysidefunction(   mapping = NULL,   data = NULL,   stat = \"ysidefunction\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_ysidefunction(   mapping = NULL,   data = NULL,   geom = \"ysidefunction\",   position = \"identity\",   ...,   fun,   ylim = NULL,   n = 101,   args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side function plot — geom_xsidefunction","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data Ignored stat_function(), use. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. arrow Arrow specification, created grid::arrow(). arrow.fill fill colour use arrow head (closed). NULL means use colour aesthetic. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders(). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. fun Function use. Either 1) anonymous function base rlang formula syntax (see rlang::as_function()) 2) quoted character name referencing function; see examples. Must vectorised. xlim Optionally, specify range function. n Number points interpolate along x axis. args List additional arguments passed function defined fun. ylim Optionally, restrict range function range (y-axis)","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side function plot — geom_xsidefunction","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidefunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side function plot — geom_xsidefunction","text":"","code":"x<- rweibull(100, 2.6, 3) y<- rweibull(100, 1.8, 3) xy.df<- data.frame(cbind(x,y)) p <- ggplot(xy.df, aes(x, y)) +   geom_point(colour = \"blue\", size = 0.25) +   geom_density2d() +   geom_xsidedensity(fill = \"blue\", alpha = .3) +   geom_ysidedensity(fill = \"blue\", alpha = .3) +   stat_xsidefunction(fun = dweibull, args = list(shape = 1.8, scale = 3), colour = \"red\") +   stat_ysidefunction(fun = dweibull, args = list(shape = 2.6, scale = 3), colour = \"red\") +   theme_classic() p"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidehistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Side Histograms — geom_xsidehistogram","title":"Side Histograms — geom_xsidehistogram","text":"xside yside variants geom_histogram geom_xsidehistogram geom_ysidehistogram. variants inherit geom_histogram differ plot data relative main panels.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidehistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side Histograms — geom_xsidehistogram","text":"","code":"geom_xsidehistogram(   mapping = NULL,   data = NULL,   stat = \"bin\",   position = \"stack\",   ...,   binwidth = NULL,   bins = NULL,   orientation = \"x\",   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysidehistogram(   mapping = NULL,   data = NULL,   stat = \"bin\",   position = \"stack\",   ...,   binwidth = NULL,   bins = NULL,   orientation = \"y\",   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidehistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side Histograms — geom_xsidehistogram","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. binwidth width bins. Can specified numeric value function takes x scale transformation input returns single numeric value. specifying function along grouping structure, function called per group. default use number bins bins, covering range data. always override value, exploring multiple widths find best illustrate stories data. bin width date variable number days time; bin width time variable number seconds. bins Number bins. Overridden binwidth. Defaults 30. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidehistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side Histograms — geom_xsidehistogram","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidehistogram.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Side Histograms — geom_xsidehistogram","text":"geom_*sidehistogram uses aesthetics geom_*sidebar()","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidehistogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side Histograms — geom_xsidehistogram","text":"","code":"p <-ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species, fill = Species)) + geom_point()  #sidehistogram p + geom_xsidehistogram(binwidth = 0.1) + geom_ysidehistogram(binwidth = 0.1)  p + geom_xsidehistogram(aes(y = after_stat(density)), binwidth = 0.1) + geom_ysidehistogram(aes(x = after_stat(density)), binwidth = 0.1)"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidelabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Side label — geom_xsidelabel","title":"Side label — geom_xsidelabel","text":"xside yside variants geom_label.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidelabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side label — geom_xsidelabel","text":"","code":"geom_xsidelabel(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"nudge\",   ...,   parse = FALSE,   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   border.colour = NULL,   border.color = NULL,   text.colour = NULL,   text.color = NULL,   size.unit = \"mm\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   label.size = lifecycle::deprecated() )  geom_ysidelabel(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"nudge\",   ...,   parse = FALSE,   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   border.colour = NULL,   border.color = NULL,   text.colour = NULL,   text.color = NULL,   size.unit = \"mm\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   label.size = lifecycle::deprecated() )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidelabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side label — geom_xsidelabel","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. parse TRUE, labels parsed expressions displayed described ?plotmath. label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines. border.colour, border.color Colour label border. NULL (default), colour aesthetic determines colour label border. border.color alias border.colour. text.colour, text.color Colour text. NULL (default), colour aesthetic determines colour text. text.color alias text.colour. size.unit size aesthetic interpreted: millimetres (\"mm\", default), points (\"pt\"), centimetres (\"cm\"), inches (\"\"), picas (\"pc\"). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders(). label.size Replaced linewidth aesthetic. Size label border, mm.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidelabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side label — geom_xsidelabel","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Side line plot — geom_xsideline","title":"Side line plot — geom_xsideline","text":"xside yside geom_line. xside yside variants geom_path","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side line plot — geom_xsideline","text":"","code":"geom_xsideline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   orientation = \"x\",   arrow = NULL,   arrow.fill = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysideline(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   orientation = \"y\",   arrow = NULL,   arrow.fill = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_xsidepath(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   arrow.fill = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysidepath(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   arrow.fill = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side line plot — geom_xsideline","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. arrow Arrow specification, created grid::arrow(). arrow.fill fill colour use arrow head (closed). NULL means use colour aesthetic. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side line plot — geom_xsideline","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side line plot — geom_xsideline","text":"","code":"#sideline ggplot(economics, aes(date, pop)) +   geom_xsideline(aes(y = unemploy)) +   geom_col() #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidepoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Side Points — geom_xsidepoint","title":"Side Points — geom_xsidepoint","text":"ggside variants geom_point geom_xsidepoint() geom_ysidepoint(). variants inherit geom_point, thus difference data plotted. xside variant plot data along x-axis, yside variant plot data along y-axis.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidepoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side Points — geom_xsidepoint","text":"","code":"geom_xsidepoint(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysidepoint(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidepoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side Points — geom_xsidepoint","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidepoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side Points — geom_xsidepoint","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidepoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side Points — geom_xsidepoint","text":"","code":"ggplot(diamonds, aes(depth, table, alpha = .2)) +   geom_point() +   geom_ysidepoint(aes(x = price)) +   geom_xsidepoint(aes(y = price)) +   theme(         ggside.panel.scale = .3     )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidesegment.html","id":null,"dir":"Reference","previous_headings":"","what":"Side line Segments — geom_xsidesegment","title":"Side line Segments — geom_xsidesegment","text":"xside yside geom_segment.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidesegment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side line Segments — geom_xsidesegment","text":"","code":"geom_xsidesegment(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   arrow.fill = NULL,   lineend = \"butt\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysidesegment(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   arrow.fill = NULL,   lineend = \"butt\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidesegment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side line Segments — geom_xsidesegment","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. arrow specification arrow heads, created grid::arrow(). arrow.fill fill colour use arrow head (closed). NULL means use colour aesthetic. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidesegment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side line Segments — geom_xsidesegment","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidesegment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side line Segments — geom_xsidesegment","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(tidyr) library(ggdendro) #dendrogram with geom_*sidesegment df0 <- mutate(diamonds, colclar = interaction(color, clarity,                       sep = \"_\", drop = TRUE)) df1 <- df0 %>%   group_by(color, clarity, colclar, cut) %>%   summarise(m_price = mean(price)) #> `summarise()` has grouped output by 'color', 'clarity', 'colclar'. You can #> override using the `.groups` argument. df <- df1 %>%   pivot_wider(id_cols = colclar,               names_from = cut,               values_from = m_price,               values_fill = 0L)  mat <- as.matrix(df[,2:6]) rownames(mat) <- df[[\"colclar\"]] dst <- dist(mat) hc_x <- hclust(dst) lvls <- rownames(mat)[hc_x$order] df1[[\"colclar\"]] <- factor(df1[[\"colclar\"]], levels = lvls) dendrox <- dendro_data(hc_x)  p <- ggplot(df1, aes(x = colclar, cut)) +   geom_tile(aes(fill = m_price)) +   viridis::scale_fill_viridis(option = \"magma\") +   theme(axis.text.x = element_text(angle = 90, vjust = .5)) p +   geom_xsidesegment(data = dendrox$segments,aes(x = x, y = y, xend = xend, yend = yend))"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetext.html","id":null,"dir":"Reference","previous_headings":"","what":"Side text — geom_xsidetext","title":"Side text — geom_xsidetext","text":"xside yside variants geom_text.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side text — geom_xsidetext","text":"","code":"geom_xsidetext(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"nudge\",   ...,   parse = FALSE,   check_overlap = FALSE,   size.unit = \"mm\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysidetext(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"nudge\",   ...,   parse = FALSE,   check_overlap = FALSE,   size.unit = \"mm\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side text — geom_xsidetext","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. parse TRUE, labels parsed expressions displayed described ?plotmath. check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_text(). Note argument supported geom_label(). size.unit size aesthetic interpreted: millimetres (\"mm\", default), points (\"pt\"), centimetres (\"cm\"), inches (\"\"), picas (\"pc\"). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side text — geom_xsidetext","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetile.html","id":null,"dir":"Reference","previous_headings":"","what":"Side tile plot — geom_xsidetile","title":"Side tile plot — geom_xsidetile","text":"xside yside variants geom_tile","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side tile plot — geom_xsidetile","text":"","code":"geom_xsidetile(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_ysidetile(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side tile plot — geom_xsidetile","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side tile plot — geom_xsidetile","text":"XLayer YLayer object added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsidetile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side tile plot — geom_xsidetile","text":"","code":"library(dplyr) library(tidyr) df <- mutate(diamonds,              colclar = interaction(color, clarity, sep = \"_\", drop = TRUE)) %>%       group_by(color, clarity, colclar, cut) %>%       summarise(m_price = mean(price)) #> `summarise()` has grouped output by 'color', 'clarity', 'colclar'. You can #> override using the `.groups` argument.  xside_data <- df %>%   ungroup() %>%   select(colclar, clarity, color) %>%   mutate_all(~factor(as.character(.x), levels = levels(.x))) %>%   pivot_longer(cols = c(clarity, color)) %>% distinct()   p <- ggplot(df, aes(x = colclar, cut)) +   geom_tile(aes(fill = m_price)) +   viridis::scale_fill_viridis(option = \"magma\") +   theme(axis.text.x = element_blank())  p + geom_xsidetile(data = xside_data, aes(y = name, xfill = value)) +    guides(xfill = guide_legend(nrow = 8))"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideviolin.html","id":null,"dir":"Reference","previous_headings":"","what":"Side Violin plots — geom_xsideviolin","title":"Side Violin plots — geom_xsideviolin","text":"xside yside variants geom_violin","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideviolin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Side Violin plots — geom_xsideviolin","text":"","code":"geom_xsideviolin(   mapping = NULL,   data = NULL,   stat = \"ydensity\",   position = \"dodge\",   ...,   trim = TRUE,   bounds = c(-Inf, Inf),   quantile.colour = NULL,   quantile.color = NULL,   quantile.linetype = 0L,   quantile.linewidth = NULL,   scale = \"area\",   na.rm = FALSE,   orientation = \"x\",   show.legend = NA,   inherit.aes = TRUE,   draw_quantiles = lifecycle::deprecated() )  geom_ysideviolin(   mapping = NULL,   data = NULL,   stat = \"ydensity\",   position = \"dodge\",   ...,   trim = TRUE,   bounds = c(-Inf, Inf),   quantile.colour = NULL,   quantile.color = NULL,   quantile.linetype = 0L,   quantile.linewidth = NULL,   scale = \"area\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   orientation = \"y\",   draw_quantiles = lifecycle::deprecated() )"},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideviolin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Side Violin plots — geom_xsideviolin","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat Use override default connection geom_violin() stat_ydensity(). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. trim TRUE (default), trim tails violins range data. FALSE, trim tails. bounds Known lower upper bounds estimated data. Default c(-Inf, Inf) means (finite) bounds. bound finite, boundary effect default density estimation corrected reflecting tails outside bounds around closest edge. Data points outside bounds removed warning quantile.colour, quantile.color, quantile.linewidth, quantile.linetype Default aesthetics quantile lines. Set NULL inherit data's aesthetics. default, quantile lines hidden can turned changing quantile.linetype. scale \"area\" (default), violins area (trimming tails). \"count\", areas scaled proportionally number observations. \"width\", violins maximum width. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders(). draw_quantiles Previous specification drawing quantiles.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideviolin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Side Violin plots — geom_xsideviolin","text":"XLayer YLayer object added ggplot object","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/reference/geom_xsideviolin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Side Violin plots — geom_xsideviolin","text":"","code":"df <- expand.grid(UpperCase = LETTERS, LowerCase = letters) df$Combo_Index <- as.integer(df$UpperCase) * as.integer(df$LowerCase)  p1 <- ggplot(df, aes(UpperCase, LowerCase)) +   geom_tile(aes(fill = Combo_Index))  # sideviolins # Note - Mixing discrete and continuous axis scales # using xsideviolins when the y aesthetic was previously # mapped with a continuous varialbe will prevent # any labels from being plotted. This is a feature that # will hopefully be added to ggside in the future.  p1 + geom_xsideviolin(aes(y = Combo_Index)) +   geom_ysideviolin(aes(x = Combo_Index))   # sideviolins with swapped orientation # Note - Discrete before Continuous # If you are to mix Discrete and Continuous variables on # one axis, ggplot2 prefers the discrete variable to be mapped # BEFORE the continuous. ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +   geom_xsideviolin(aes(y = Species), orientation = \"y\") +   geom_point()   # Alternatively, you can recast the value as a factor and then # a numeric  ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +   geom_point() +   geom_xsideviolin(aes(y = as.numeric(Species)), orientation = \"y\") +   geom_ysideviolin(aes(x = as.numeric(Species)), orientation = \"x\")"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated Functions — ggside-deprecated","title":"Deprecated Functions — ggside-deprecated","text":"following functions deprecated. as_ggsideFacet <- ggside_facet as_ggsideCoord <- ggside_coord .ggside <- is_ggside .ggside_layer <- is_ggside_layer .ggside_options <- is_ggside_options .ggside_scale <- is_ggside_scale","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Coord Compatible with ggside — ggside_coord","title":"Coord Compatible with ggside — ggside_coord","text":"S3 class converts old Coord one compatible ggside. Can also update ggside object. Typically, new ggproto inherit object replaced.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coord Compatible with ggside — ggside_coord","text":"","code":"ggside_coord(coord)  # Default S3 method ggside_coord(coord)  # S3 method for class 'CoordCartesian' ggside_coord(coord)  # S3 method for class 'CoordSide' ggside_coord(coord)  # S3 method for class 'CoordTrans' ggside_coord(coord)  # S3 method for class 'CoordFixed' ggside_coord(coord)"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coord Compatible with ggside — ggside_coord","text":"coord coord ggproto Object replace","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-facets.html","id":null,"dir":"Reference","previous_headings":"","what":"Extending base ggproto classes for ggside — check_scales_collapse","title":"Extending base ggproto classes for ggside — check_scales_collapse","text":"check_scales_collapse helper function meant called inherited Facet's compute_layout method sidePanelLayout helper function meant called inherited Facet's compute_layout method check_scales_collapse S3 class converts old Facet one compatible ggside. Can also update ggside object. Typically, new ggproto inherit object replaced.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extending base ggproto classes for ggside — check_scales_collapse","text":"","code":"check_scales_collapse(data, params)  sidePanelLayout(layout, ggside)  ggside_facet(facet, ggside)"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extending base ggproto classes for ggside — check_scales_collapse","text":"data data passed ggproto object params parameters passed ggproto object layout layout computed inherited ggproto Facet compute_layout method ggside ggside object update facet Facet ggproto Object replace","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-facets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extending base ggproto classes for ggside — check_scales_collapse","text":"ggproto object can added ggplot object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-facets.html","id":"extended-facets","dir":"Reference","previous_headings":"","what":"Extended Facets","title":"Extending base ggproto classes for ggside — check_scales_collapse","text":"following list ggplot2 facets available use ggside base. FacetNull -> FacetSideNull FacetGrid -> FacetSideGrid FacetWrap -> FacetSideWrap","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-geoms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extending base ggproto classes for ggside — parse_side_aes","title":"Extending base ggproto classes for ggside — parse_side_aes","text":"ggproto classes slightly modified respective inherited ggproto class. biggest difference exposing 'x/yfill', 'x/ycolour', 'x/ycolor' viable aesthetic mappings.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-geoms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extending base ggproto classes for ggside — parse_side_aes","text":"","code":"parse_side_aes(data, params)"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-geoms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extending base ggproto classes for ggside — parse_side_aes","text":"data data passed internally params params available ggproto object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-ggproto-geoms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extending base ggproto classes for ggside — parse_side_aes","text":"ggproto object usually passed layer","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-options.html","id":null,"dir":"Reference","previous_headings":"","what":"ggside options — ggside","title":"ggside options — ggside","text":"Set characteristics side panels","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggside options — ggside","text":"","code":"ggside(   x.pos = NULL,   y.pos = NULL,   scales = NULL,   collapse = NULL,   draw_x_on = NULL,   draw_y_on = NULL,   strip = NULL,   respect_side_labels = NULL )"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggside options — ggside","text":"x.pos x side panel can either take \"top\" \"bottom\" y.pos y side panel can either take \"right\" \"left\" scales Determines side panel's unaligned axis scale. Inputs similar facet_* scales function. Default set \"fixed\", \"free_x\", \"free_y\" \"free\" acceptable inputs. example, xside panels aligned x axis main panel. Setting \"free\" \"free_y\" cause y scales x side Panels independent. collapse Determines side panels collapsed single panel. Set \"x\" collapse x side panels, set \"y\" collapse y side panels, set \"\" collapse x y side panels. draw_x_on, draw_y_on Determines axis rendered. example: default, bottom x-axis rendered bottom panel per column. set \"main\", axis rendered bottom bottom main panel. set \"side\", x-axis rendered bottom bottom side panel(s). may apply logic axis positions. strip Determines strip rendered main plot default locations. effect facet_grid. respect_side_labels Valid arguments \"default\", \"x\", \"y\", \"\", \"none\" Indicates panel spacing respect axis labels. default respect side panel labels except xside labels side yside panel. Note: setting parameter \"x\" \"respect labels xside panel\" consequently yside labels, present, respected.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggside options — ggside","text":"object class 'ggside_options' added ggplot","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/reference/ggside-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggside: Side Grammar Graphics — ggside-package","title":"ggside: Side Grammar Graphics — ggside-package","text":"grammar graphics shown 'ggplot2' provided expressive API users build plots. 'ggside' extends 'ggplot2' allowing users add graphical information one main panel's axis using familiar 'ggplot2' style API tidy data. package particularly useful visualizing metadata discrete axis, summary graphics continuous axis boxplot density distribution.","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/reference/ggside-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggside: Side Grammar Graphics — ggside-package","text":"Maintainer: Justin Landis jtlandis314@gmail.com (ORCID)","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-binned.html","id":null,"dir":"Reference","previous_headings":"","what":"Position scales for binning continuous data ggside scales — ggside-scales-binned","title":"Position scales for binning continuous data ggside scales — ggside-scales-binned","text":"xside yside variants scale_x_binned/scale_y_binned. scale_xsidey_binned enables better control y-axis rendered xside panel scale_ysidex_binned enables better control x-axis rendered yside panel.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-binned.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Position scales for binning continuous data ggside scales — ggside-scales-binned","text":"","code":"scale_xsidey_binned(   name = waiver(),   n.breaks = 10,   nice.breaks = TRUE,   breaks = waiver(),   labels = waiver(),   limits = NULL,   expand = waiver(),   oob = squish,   na.value = NA_real_,   right = TRUE,   show.limits = FALSE,   transform = \"identity\",   guide = waiver(),   position = \"left\" )  scale_ysidex_binned(   name = waiver(),   n.breaks = 10,   nice.breaks = TRUE,   breaks = waiver(),   labels = waiver(),   limits = NULL,   expand = waiver(),   oob = squish,   na.value = NA_real_,   right = TRUE,   show.limits = FALSE,   transform = \"identity\",   guide = waiver(),   position = \"bottom\" )"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-binned.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Position scales for binning continuous data ggside scales — ggside-scales-binned","text":"name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. n.breaks number break points create breaks given directly. nice.breaks Logical. breaks attempted placed nice values instead exactly evenly spaced limits. TRUE (default) scale ask transformation object create breaks, may result different number breaks requested. Ignored breaks given explicitly. breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output (e.g., function returned scales::extended_breaks()). Note position scales, limits provided scale expansion. Also accepts rlang lambda function notation. labels One options . Please note labels vector, highly recommended also set breaks argument vector protect unintended mismatches. NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale range numeric vector length two providing limits scale. Use NA refer existing minimum maximum function accepts existing (automatic) limits returns new limits. Also accepts rlang lambda function notation. Note setting limits positional scales remove data outside limits. purpose zoom, use limit argument coordinate system (see coord_cartesian()). expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. oob One : Function handles limits outside scale limits (bounds). Also accepts rlang lambda function notation. default (scales::squish()) squishes bounds values range. scales::censor replacing bounds values NA. scales::squish_infinite() squishing infinite values range. na.value Missing values replaced value. right intervals closed right (TRUE, default) intervals closed left (FALSE)? 'Closed right' means values break positions part lower bin (open left), whereas part upper bin intervals closed left (open right). show.limits limits scale appear ticks transform continuous scales, name transformation object object . Built-transformations include \"asn\", \"atanh\", \"boxcox\", \"date\", \"exp\", \"hms\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\", \"logit\", \"modulus\", \"probability\", \"probit\", \"pseudo_log\", \"reciprocal\", \"reverse\", \"sqrt\" \"time\". transformation object bundles together transform, inverse, methods generating breaks labels. Transformation objects defined scales package, called transform_<name>. transformations require arguments, can call scales package, e.g. scales::transform_boxcox(p = 2). can create transformation scales::new_transform(). guide function used create guide name. See guides() information. position position scales, position axis. left right y axes, top bottom x axes.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-binned.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Position scales for binning continuous data ggside scales — ggside-scales-binned","text":"ggside_scale object inheriting ggplot2::ScaleBinnedPosition","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-binned.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Position scales for binning continuous data ggside scales — ggside-scales-binned","text":"","code":"ggplot(iris, aes(Sepal.Width, Sepal.Length)) +   geom_point() +   geom_xsidepoint(aes(y = Petal.Width, xcolour = Petal.Length)) +   scale_xsidey_binned(n.breaks = 4) +   scale_colour_steps(aesthetics = \"xcolour\", guide = guide_colorbar(available_aes = \"xcolour\")) +   theme(ggside.panel.scale.x = .3)"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Position scales for continuous data ggside scales — ggside-scales-continuous","title":"Position scales for continuous data ggside scales — ggside-scales-continuous","text":"xside yside variants scale_x_continuous/ scale_y_continuous. scale_xsidey_continuous enables better control y-axis rendered xside panel scale_ysidex_continuous enables better control x-axis rendered yside panel.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Position scales for continuous data ggside scales — ggside-scales-continuous","text":"","code":"scale_xsidey_continuous(   name = waiver(),   breaks = waiver(),   minor_breaks = waiver(),   n.breaks = NULL,   labels = waiver(),   limits = NULL,   expand = waiver(),   oob = scales::censor,   na.value = NA_real_,   transform = \"identity\",   guide = waiver(),   position = \"left\",   sec.axis = waiver() )  scale_xsidey_log10(...)  scale_xsidey_reverse(...)  scale_xsidey_sqrt(...)  scale_ysidex_log10(...)  scale_ysidex_reverse(...)  scale_ysidex_sqrt(...)  scale_ysidex_log10(...)  scale_ysidex_reverse(...)  scale_ysidex_sqrt(...)"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Position scales for continuous data ggside scales — ggside-scales-continuous","text":"name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output (e.g., function returned scales::extended_breaks()). Note position scales, limits provided scale expansion. Also accepts rlang lambda function notation. minor_breaks One : NULL minor breaks waiver() default breaks (none discrete, one minor break major break continuous) numeric vector positions function given limits returns vector minor breaks. Also accepts rlang lambda function notation. function two arguments, given limits major break positions. n.breaks integer guiding number major breaks. algorithm may choose slightly different number ensure nice break labels. effect breaks = waiver(). Use NULL use default number breaks given transformation. labels One options . Please note labels vector, highly recommended also set breaks argument vector protect unintended mismatches. NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale range numeric vector length two providing limits scale. Use NA refer existing minimum maximum function accepts existing (automatic) limits returns new limits. Also accepts rlang lambda function notation. Note setting limits positional scales remove data outside limits. purpose zoom, use limit argument coordinate system (see coord_cartesian()). expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. oob One : Function handles limits outside scale limits (bounds). Also accepts rlang lambda function notation. default (scales::censor()) replaces bounds values NA. scales::squish() squishing bounds values range. scales::squish_infinite() squishing infinite values range. na.value Missing values replaced value. transform continuous scales, name transformation object object . Built-transformations include \"asn\", \"atanh\", \"boxcox\", \"date\", \"exp\", \"hms\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\", \"logit\", \"modulus\", \"probability\", \"probit\", \"pseudo_log\", \"reciprocal\", \"reverse\", \"sqrt\" \"time\". transformation object bundles together transform, inverse, methods generating breaks labels. Transformation objects defined scales package, called transform_<name>. transformations require arguments, can call scales package, e.g. scales::transform_boxcox(p = 2). can create transformation scales::new_transform(). guide function used create guide name. See guides() information. position position scales, position axis. left right y axes, top bottom x axes. sec.axis sec_axis() used specify secondary axis. ... arguments passed scale_(y|x)side(x|y)_continuous()","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Position scales for continuous data ggside scales — ggside-scales-continuous","text":"ggside_scale object inheriting ggplot2::ScaleContinuousPosition","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Position scales for continuous data ggside scales — ggside-scales-continuous","text":"","code":"library(ggside) library(ggplot2) # adding continuous y-scale to the x-side panel, when main panel mapped to discrete data ggplot(mpg, aes(hwy, class, colour = class)) +   geom_boxplot() +   geom_xsidedensity(position = \"stack\") +   theme(ggside.panel.scale = .3) +   scale_xsidey_continuous(minor_breaks = NULL, limits = c(NA, 1))   # If you need to specify the main scale, but need to prevent this from # affecting the side scale. Simply add the appropriate `scale_*side*_*()` function. ggplot(mtcars, aes(wt, mpg)) +   geom_point() +   geom_xsidehistogram() +   geom_ysidehistogram() +   scale_x_continuous(     breaks = seq(1, 6, 1),     # would otherwise remove the histogram     # as they have a lower value of 0.     limits = (c(1, 6))   ) +   scale_ysidex_continuous() # ensures the x-axis of the y-side panel has its own scale. #> `stat_xsidebin()` using `bins = 30`. Pick better value `binwidth`. #> `stat_ysidebin()` using `bins = 30`. Pick better value `binwidth`. #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_xsidebar()`)."},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Position scales for discrete data ggside scales — ggside-scales-discrete","title":"Position scales for discrete data ggside scales — ggside-scales-discrete","text":"xside yside variants scale_x_discrete/scale_y_discrete. scale_xsidey_discrete enables better control y-axis rendered xside panel scale_ysidex_discrete enables better control x-axis rendered yside panel.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Position scales for discrete data ggside scales — ggside-scales-discrete","text":"... Arguments passed discrete_scale breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE includes levels factor. Please note display every level legend, layer use show.legend = TRUE. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. na.value na.translate = TRUE, aesthetic value missing values displayed ? apply position scales NA always placed far right. aesthetics names aesthetics scale works . minor_breaks One : NULL minor breaks waiver() default breaks (none discrete, one minor break major break continuous) numeric vector positions function given limits returns vector minor breaks. Also accepts rlang lambda function notation. function two arguments, given limits major break positions. labels One options . Please note labels vector, highly recommended also set breaks argument vector protect unintended mismatches. NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. call call used construct scale reporting messages. super super class use constructed scale expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. guide function used create guide name. See guides() information. position position scales, position axis. left right y axes, top bottom x axes.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Position scales for discrete data ggside scales — ggside-scales-discrete","text":"ggside_scale object inheriting ggplot2::ScaleDiscretePosition","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales-discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Position scales for discrete data ggside scales — ggside-scales-discrete","text":"","code":"library(ggside) library(ggplot2) # adding discrete y-scale to the x-side panel, when main panel mapped to continuous data ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point() +   geom_xsideboxplot(aes(y = class), orientation = \"y\") +   theme(ggside.panel.scale = .3) +   scale_xsidey_discrete(guide = guide_axis(angle = 45))   # If you need to specify the main scale, but need to prevent this from # affecting the side scale. Simply add the appropriate `scale_*side*_*()` # function. ggplot(mpg, aes(class, displ)) +   geom_boxplot() +   geom_ysideboxplot(aes(x = \"all\"), orientation = \"x\") +   scale_x_discrete(guide = guide_axis(angle = 90)) + # rotate the main panel text   scale_ysidex_discrete() # leave side panel as default"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Specifying side scales — ggside-scales","title":"Specifying side scales — ggside-scales","text":"xside yside variants geoms plotted along x-axis y-axis respectively main panel's data mapping. positional scale shared main panel side panel. related positional scale type side panel, .e. y axis xside panel (xsidey) x axis yside panel (ysidex), determened automatically ggplot2 default scales. However, can override using continuous discrete variants within ggside. allows user select scale type transform approprate side panels.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-theme.html","id":null,"dir":"Reference","previous_headings":"","what":"ggside custom themes — theme_ggside_grey","title":"ggside custom themes — theme_ggside_grey","text":"Theme elements help customize look feel ggside's side panels.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggside custom themes — theme_ggside_grey","text":"","code":"theme_ggside_grey(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  theme_ggside_gray(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  theme_ggside_bw(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  theme_ggside_linedraw(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  theme_ggside_light(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  theme_ggside_dark(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  theme_ggside_minimal(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  theme_ggside_classic(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  theme_ggside_void(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )"},{"path":"https://jtlandis.github.io/ggside/reference/ggside-theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggside custom themes — theme_ggside_grey","text":"base_size base font size, given pts. base_family base font family base_line_size base size line elements base_rect_size base size rect elements","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside-theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggside custom themes — theme_ggside_grey","text":"Incomplete themes: Unlike complete themes like theme_grey, ggside's variants considered \"complete\". user may want specify side panels separately theme main panel. means theme_ggside_*() functions called ggplot2's complete themes.","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/reference/ggside-theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggside custom themes — theme_ggside_grey","text":"","code":"library(ggplot2) library(ggside)  p <- ggplot(iris, aes(Sepal.Width, Petal.Length, color = Species)) +   geom_point() +   geom_xsidedensity() +   geom_ysidedensity() +   theme_dark()  p   p + theme_ggside_classic()  p + theme_ggside_void()  p + theme_ggside_linedraw() +   theme(ggside.panel.border = element_rect(colour = \"red\"))"},{"path":"https://jtlandis.github.io/ggside/reference/ggside_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"ggside geom constructor — ggside_geom","title":"ggside geom constructor — ggside_geom","text":"utility function make ggside Geom","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggside geom constructor — ggside_geom","text":"","code":"ggside_geom(class_name = NULL, geom = NULL, side = NULL, ...)"},{"path":"https://jtlandis.github.io/ggside/reference/ggside_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggside geom constructor — ggside_geom","text":"class_name New class name ggproto object geom Geom ggproto inherit side resulting object configured x y ... additional members add ggproto class.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"New ggside layer — ggside_layer","title":"New ggside layer — ggside_layer","text":"utility function make ggside layer compatible ggside internals","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New ggside layer — ggside_layer","text":"","code":"ggside_layer(   geom = NULL,   stat = NULL,   data = NULL,   mapping = NULL,   position = NULL,   params = list(),   inherit.aes = TRUE,   check.aes = TRUE,   check.param = TRUE,   show.legend = NA,   key_glyph = NULL,   side = NULL )  as_ggside_layer(layer, side)"},{"path":"https://jtlandis.github.io/ggside/reference/ggside_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New ggside layer — ggside_layer","text":"geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. params Additional parameters geom stat. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders(). check.aes, check.param TRUE, default, check supplied parameters aesthetics understood geom stat. Use FALSE suppress checks. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. key_glyph legend key drawing function string providing function name minus draw_key_ prefix. See draw_key details. side resulting ggplot2_layer configured x y side layer LayerInstance object made layer","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct ggside layout — ggside_layout","title":"Construct ggside layout — ggside_layout","text":"Creates new layout object required ggside functionality","code":""},{"path":"https://jtlandis.github.io/ggside/reference/ggside_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct ggside layout — ggside_layout","text":"","code":"ggside_layout(layout)"},{"path":"https://jtlandis.github.io/ggside/reference/ggside_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct ggside layout — ggside_layout","text":"layout ggproto Layout object","code":""},{"path":"https://jtlandis.github.io/ggside/reference/is_ggside.html","id":null,"dir":"Reference","previous_headings":"","what":"Check ggside objects — is_ggside","title":"Check ggside objects — is_ggside","text":"Check ggside objects","code":""},{"path":"https://jtlandis.github.io/ggside/reference/is_ggside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check ggside objects — is_ggside","text":"","code":"is_ggside(x)  is_ggside_layer(x)  is_ggside_options(x)  is_ggside_scale(x)"},{"path":"https://jtlandis.github.io/ggside/reference/is_ggside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check ggside objects — is_ggside","text":"x Object test","code":""},{"path":"https://jtlandis.github.io/ggside/reference/is_ggside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check ggside objects — is_ggside","text":"logical value","code":""},{"path":"https://jtlandis.github.io/ggside/reference/position_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale x or y onto new range in margin — position_rescale","title":"Rescale x or y onto new range in margin — position_rescale","text":"Take range specified axis rescale new range midpoint. default range calculated associated main plot axis mapping. range either resolution 5% axis range, depending original data discrete continuous respectively. layer called position_rescale possess instance value indexes axis rescale. default, position_rescale dodge previous call unless instance specified previous layer.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/position_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale x or y onto new range in margin — position_rescale","text":"","code":"position_rescale(   rescale = \"y\",   midpoint = NULL,   range = NULL,   location = NULL,   instance = NULL )  position_yrescale(   rescale = \"y\",   midpoint = NULL,   range = NULL,   location = NULL,   instance = NULL )  position_xrescale(   rescale = \"x\",   midpoint = NULL,   range = NULL,   location = NULL,   instance = NULL )"},{"path":"https://jtlandis.github.io/ggside/reference/position_rescale.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rescale x or y onto new range in margin — position_rescale","text":"object class PositionRescale (inherits Position, ggproto, gg) length 10.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/position_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale x or y onto new range in margin — position_rescale","text":"rescale character value \"x\" \"y\". specifies mapping data rescaled midpoint default set NULL. Center point rescaled x/y values reside. range default set NULL auto generates main mapping range. Specifies size rescaled range. location specifies position_rescale try place midpoint. midpoint specified, location ignored placed specified location. instance integer indexes rescaled axis calls. instance may specified previous layer instance exists, midpoint range used rescaling. x y indexed independently.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/position_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale x or y onto new range in margin — position_rescale","text":"ggproto object inheriting 'Position' can added ggplot","code":""},{"path":"https://jtlandis.github.io/ggside/reference/scale_xcolour.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for the *colour aesthetics — scale_xcolour","title":"Scales for the *colour aesthetics — scale_xcolour","text":"various scales can applied xsidebar ysidebar colour aesthetics, xcolour ycolour. usage existing standard ggplot2 scales.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/scale_xcolour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales for the *colour aesthetics — scale_xcolour","text":"returns ggproto object added ggplot","code":""},{"path":"https://jtlandis.github.io/ggside/reference/scale_xcolour.html","id":"related-functions","dir":"Reference","previous_headings":"","what":"Related Functions","title":"Scales for the *colour aesthetics — scale_xcolour","text":"scale_xcolour_hue scale_ycolour_hue scale_xcolour_discrete scale_ycolour_discrete scale_xcolour_continuous scale_ycolour_continuous scale_xcolour_manual scale_ycolour_manual scale_xcolour_gradient scale_ycolour_gradient scale_xcolour_gradientn scale_ycolour_gradientn","code":""},{"path":"https://jtlandis.github.io/ggside/reference/scale_xfill.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for the *fill aesthetics — scale_xfill","title":"Scales for the *fill aesthetics — scale_xfill","text":"various scales can applied xsidebar ysidebar fill aesthetics, xfill yfill. usage existing standard ggplot2 scales.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/scale_xfill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales for the *fill aesthetics — scale_xfill","text":"returns ggproto object added ggplot","code":""},{"path":"https://jtlandis.github.io/ggside/reference/scale_xfill.html","id":"related-functions","dir":"Reference","previous_headings":"","what":"Related Functions","title":"Scales for the *fill aesthetics — scale_xfill","text":"scale_xfill_hue scale_yfill_hue scale_xfill_discrete scale_yfill_discrete scale_xfill_continuous scale_yfill_continuous scale_xfill_manual scale_yfill_manual scale_xfill_gradient scale_yfill_gradient scale_xfill_gradientn scale_yfill_gradientn","code":""},{"path":"https://jtlandis.github.io/ggside/reference/scale_ycolour.html","id":null,"dir":"Reference","previous_headings":"","what":"scale_ycolour_hue — scale_ycolour_hue","title":"scale_ycolour_hue — scale_ycolour_hue","text":"scale_ycolour_hue scale_ycolour_manual scale_ycolour_gradient scale_ycolour_discrete scale_ycolour_discrete scale_ycolour_continuous scale_ycolour_continuous","code":""},{"path":"https://jtlandis.github.io/ggside/reference/scale_yfill.html","id":null,"dir":"Reference","previous_headings":"","what":"scale_yfill_hue — scale_yfill_hue","title":"scale_yfill_hue — scale_yfill_hue","text":"scale_yfill_hue scale_yfill_manual scale_yfill_gradient scale_yfill_discrete scale_yfill_continuous","code":""},{"path":"https://jtlandis.github.io/ggside/reference/stat_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise by grouping variable — stat_summarise","title":"Summarise by grouping variable — stat_summarise","text":"Applies function specified grouping variable","code":""},{"path":"https://jtlandis.github.io/ggside/reference/stat_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise by grouping variable — stat_summarise","text":"","code":"stat_summarise(   mapping = NULL,   data = NULL,   geom = \"bar\",   position = \"identity\",   ...,   fun = NULL,   args = list(),   show.legend = NA,   inherit.aes = TRUE )  stat_summarize(   mapping = NULL,   data = NULL,   geom = \"bar\",   position = \"identity\",   ...,   fun = NULL,   args = list(),   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://jtlandis.github.io/ggside/reference/stat_summarise.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summarise by grouping variable — stat_summarise","text":"object class StatSummarise (inherits Stat, ggproto, gg) length 5. object class StatSummarize (inherits Stat, ggproto, gg) length 5.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/stat_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise by grouping variable — stat_summarise","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... additional arguments pass layer. fun Summarising function use. function provided default length. args List additional arguments passed function. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://jtlandis.github.io/ggside/reference/stat_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise by grouping variable — stat_summarise","text":"Layer object added ggplot","code":""},{"path":"https://jtlandis.github.io/ggside/reference/stat_summarise.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Summarise by grouping variable — stat_summarise","text":"Using stat_summarise requires use domain aesthetic mapping. allows summarise data instead assuming x function's domain.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/stat_summarise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise by grouping variable — stat_summarise","text":"","code":"library(tidyr) i <- gather(iris,\"key\",\"value\",-Species) ggplot(i, aes(Species, fill = key, domain = value)) +    geom_bar(aes(y = after_stat(summarise)), stat = \"summarise\", fun = mean) +    stat_summarise(aes(y = after_stat(summarise),                   label = after_stat(summarise)),                   position = position_stack(vjust = .5), geom = \"text\", fun = mean)"},{"path":"https://jtlandis.github.io/ggside/reference/xside.html","id":null,"dir":"Reference","previous_headings":"","what":"The xside geometries — xside","title":"The xside geometries — xside","text":"xside refers api ggside. geom_ xside plot respective geometry along x-axis per facet panel. default xside panel plot main panel. xside panel always share scale main panel, expected separate y-axis scaling.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/xside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The xside geometries — xside","text":"geom_xside* return XLayer object added ggplot","code":""},{"path":"https://jtlandis.github.io/ggside/reference/xside.html","id":"new-aesthetics","dir":"Reference","previous_headings":"","what":"New Aesthetics","title":"The xside geometries — xside","text":"xside Geometries xfill, xcolour/xcolor available aesthetic mappings. mappings behave exactly like default counterparts except considered separate scales. xside geometries use xfill fill, default fill xfill provided. goes xcolour respects colour. comes handy wish map fill one geometry continuous, can still map xfill separate xside geometry without conflicts. See information vignette(\"ggside\").","code":""},{"path":"https://jtlandis.github.io/ggside/reference/xside.html","id":"exported-geometries","dir":"Reference","previous_headings":"","what":"Exported Geometries","title":"The xside geometries — xside","text":"following xside variants ggplot2 Geometries geom_xsidebar geom_xsideboxplot geom_xsidecol geom_xsidedensity geom_xsidefreqpoly geom_xsidehistogram geom_xsideline geom_xsidepath geom_xsidepoint geom_xsidetext geom_xsidetile geom_xsideviolin","code":""},{"path":[]},{"path":"https://jtlandis.github.io/ggside/reference/yside.html","id":null,"dir":"Reference","previous_headings":"","what":"The yside geometries — yside","title":"The yside geometries — yside","text":"yside refers api ggside. geom_ yside plot respective geometry along y-axis per facet panel. yside panel plot right main panel default. yside panel always share scale main panel, expected separate x-axis scaling.","code":""},{"path":"https://jtlandis.github.io/ggside/reference/yside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The yside geometries — yside","text":"geom_yside* return YLayer object added ggplot","code":""},{"path":"https://jtlandis.github.io/ggside/reference/yside.html","id":"new-aesthetics","dir":"Reference","previous_headings":"","what":"New Aesthetics","title":"The yside geometries — yside","text":"yside Geometries yfill, ycolour/ycolor available aesthetic mappings. mappings behave exactly like default counterparts except considered separate scales. yside geometries use yfill fill, default fill yfill provided. goes ycolour respects colour. comes handy wish map fill one geometry continuous, can still map yfill separate yside geometry without conflicts. See information vignette(\"ggside\"). #' @section Exported Geometries: following yside variants ggplot2 Geometries geom_ysidebar geom_ysideboxplot geom_ysidecol geom_ysidedensity geom_ysidefreqpoly geom_ysidehistogram geom_ysideline geom_ysidepath geom_ysidepoint geom_ysidetext geom_ysidetile geom_ysideviolin","code":""},{"path":[]},{"path":[]},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"detailsbreaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Details/Breaking Changes","title":"ggside 0.4.0","text":"ggplot2 prepares next major release, ggside try move kind. running log changes required due ggplot2’s welcome changes S7. ggside longer exports overload +.gg. ggside now uses recommened generic ggplot2::update_ggplot() control ggside objects added object. previously, ggside rely NextMethod() flexibly dispatch ggplot2 subclasses. S7 longer easily done. example, update_ggplot(object = <class_any>, plot = <class_ggside>) explicitly forces plot argument dispatched class_ggplot object. prevents possible multiple inheritance interactions ggside extensions ggplot2. ggside (>= v0.4.0) now depend ggplot2 (>= v4.0.0).","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-032","dir":"Changelog","previous_headings":"","what":"ggside 0.3.2","title":"ggside 0.3.2","text":"CRAN release: 2025-08-24 version sync ggplot2 (3.5.2). fixing warnings using .ggproto(). ggside Now uses is_ggproto() instead. Addresses issue #64 ggside now depend R (>= 4.1.0) already internally explicitly stated DESCRIPTION file. Fixing Notes cran regarding missing doc links.","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-031","dir":"Changelog","previous_headings":"","what":"ggside 0.3.1","title":"ggside 0.3.1","text":"CRAN release: 2024-03-01 Variables scoped function (passed aesthetic mapping) now found evaluated correctly Resurgence old warning suppressed correctly #33","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-030","dir":"Changelog","previous_headings":"","what":"ggside 0.3.0","title":"ggside 0.3.0","text":"CRAN release: 2024-02-26","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"ggside 0.3.0","text":"following classes longer exported. FacetSideNull, FacetSideGrid, FacetSideWrap ggplot2’s GeomCol GeomBar now compute resolution based panels, entire data whole. may affect ggside plots use variant geometries. Set width parameter manually retain old figures. ggside now depends ggplot2 (>3.5.0) make side positional scales work reliably, layer slot ggplot object needs extended modified. slot available latest version ggplot2. Attempting render ggside object whose Layout subclassed ggside may lead unexpected results. ggplot2 (3.5.0), slightly spacing y-axis title panels y-axis plotted right side. may attributed new guide’s system. ggside’s adjacent side scales now operate independently (support issue #40, see details updates section). example, applying scale_y_log10() ggside plot xside geometry apply transform xsidey scale. experimental feature subject change future ggside can move consistent set expectations side scales.","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"updates-0-3-0","dir":"Changelog","previous_headings":"","what":"Updates","title":"ggside 0.3.0","text":"Using coord_cartesian(xlim = <limits>, ylim = <limits>) apply main plotting scales side panel scales. instance, using p + coord_cartesian(xlim = c(0,1)) p ggside object yside geometry set limits ysidex scale. user wants control limits side scales, use scale_(x|y)side(y|x)_*() functions. Addresses issue #55 ggside_options object now inherits ggproto instead list. ggside_options defaults arguments now NULL. help update object appropriately without overriding previous options specified ggside(). ggside now subclasses Layout allowing better control side scales trained. feature may relatively unstable depending version ggplot2 installed. ggside_options object now new argument respect_side_labels control spacing given panels axes text labels. See ?ggside argument options. Note, theme option ggside.panel.spacing smaller space required labels, priority given respect_side_labels option ggside.panel.spacing greater. scale_xsidey_log10(), scale_ysidex_log10() scale_xsidey_reverse(), scale_ysidex_reverse() scale_xsidey_sqrt(), scale_ysidex_reverse() ggside Geom ggproto objects aesthetics changed. example, GeomXsidebar$required_aes set c(\"x\", \"xsidey\") instead c(\"x\", \"y\"). ensure side panel’s respective axis generates default scale. change, users longer need preemptively provide scale_(x|y)side(y|x)_*() function. as_ggsideFacet -> ggside_facet as_ggsideCoord -> ggside_coord Much syntax creating compatible ggside layer wrapped ggside_layer, similar ggplot2::layer except additional argument side. allow users attempt make compatible ggside_layer object custom Geom Stat combinations. Ideally, user modify Geom Stat directly, handled subclassing Layer ggproto class directly. many ggside internals trimmed redundancy, resulting smaller package overall.","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-023","dir":"Changelog","previous_headings":"","what":"ggside 0.2.3","title":"ggside 0.2.3","text":"CRAN release: 2023-12-10","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"updates-0-2-3","dir":"Changelog","previous_headings":"","what":"Updates","title":"ggside 0.2.3","text":"fixes issue facet_grid(..., scales = \"free/free_x/free_y\") allowed certain ggside(collaps = \"/x/y\"). restriction makes sense facet_wrap facet_grid. Addresses issue #45 fixes tests ggside compatible scales (v1.3.0). adding cli dependency added xside yside variants geom_abline, geom_hline geom_vline. Addresses issue #48","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-022","dir":"Changelog","previous_headings":"","what":"ggside 0.2.2","title":"ggside 0.2.2","text":"CRAN release: 2022-12-04","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"updates-0-2-2","dir":"Changelog","previous_headings":"","what":"Updates","title":"ggside 0.2.2","text":"ggside_options object now inherits ggproto instead list. fixed issue facet_wrap(..., scales = \"free/free_x/free_y\") prevented associated scale_ysidex_*()/scale_xsidey_*() functions plotting guides. Addresses issue #35 ggside now provides informative warning user provides free scales facets incompatible argument ggside(collapse = ...). warning force collapse parameter something comply facet scales specification. ggside resistant ggplot2’s updates default aesthetics. ggplot2 v3.4.0 included new default aesthetic caused ggside geoms break. Addresses issue #36","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-021","dir":"Changelog","previous_headings":"","what":"ggside 0.2.1","title":"ggside 0.2.1","text":"CRAN release: 2022-07-20","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"breaking-change-0-2-1","dir":"Changelog","previous_headings":"","what":"Breaking change","title":"ggside 0.2.1","text":"Certain ggside geometries capabilities use xfill/yfill xcolour/ycolour place normal fill colour aesthetics. always meant provide separate aesthetic scale color . earlier version ggside failed consider case fill/colour specified global mapping, user passes new data frame ggside layer excludes quoted column. addressed #28 xfill/yfill specified, global fill aesthetic ignored (well xcolour/ycolour colour). fix, however, exposed potential breaking change, meaning plots following characteristics may exactly compared earlier versions ggside (< 0.2.1) : fill colour used global mapping xfill/yfill xcolour/ycolour (respectively) used ggside layer quoted columns aesthetics available whatever data given layer worked past computed mapping groups made aesthetics, filling coloring ggside aesthetic. Now, layer fill color ggside aesthetic - potentially reducing number groups made plot.","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"updates-0-2-1","dir":"Changelog","previous_headings":"","what":"Updates","title":"ggside 0.2.1","text":"ggside() gains strip argument, allowing facet_grid plot strips main panels opposed default side panels. Addresses issue #26 fixed annoying warnings plot scales mixing discrete continuous scales. Addresses issue #33 geom_xsidefunction(), geom_ysidefunction() geom_xsideline(), geom_ysideline() geom_xsidelabel(), geom_ysidelabel() stat_xsidefunction() stat_ysidefunction() added accompany geom_(x|y)sidefunction. seemed special case stat variant also needed. geom_abline(), geom_hline(), geom_vline() longer cause errors used ggside object facet_wrap()/facet_grid() place. Addresses issue #3","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-020","dir":"Changelog","previous_headings":"","what":"ggside 0.2.0","title":"ggside 0.2.0","text":"CRAN release: 2021-12-11 set new theme elements added give users control side panels rendered. Please see ?ggside-theme details. Addresses Feature request #10. make way change, ggside now also modifies Coord object. Currently CoordCartesian, CoordFixed CoordTrans supported ggside. new arguments added ggside: draw_x_on draw_y_on allow user specify respective axis rendered main panel side panel.","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-013","dir":"Changelog","previous_headings":"","what":"ggside 0.1.3","title":"ggside 0.1.3","text":"CRAN release: 2021-10-24 Properly imported ggplot2::ggplot_add() ggside ggside methods available ggplot2 calls. Addresses issue #24. Re-factored XLayer YLayer rely less ggplot2 internal Layer class. Hopefully fixing issue users may experience ggplot2 (3.3.2) ggplot2 (3.3.5). Addresses issue #23.","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-012","dir":"Changelog","previous_headings":"","what":"ggside 0.1.2","title":"ggside 0.1.2","text":"CRAN release: 2021-07-21 Fixed bug additional messages printed console using ggplot2::facet_wrap() ggplot2::facet_grid(). Addresses issue #20. Fixed bug geom_xsidetext() using incorrect Geom parameter. Addresses issue #19.","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-011","dir":"Changelog","previous_headings":"","what":"ggside 0.1.1","title":"ggside 0.1.1","text":"CRAN release: 2021-07-20 fixed bug colour/color/fill appear guides used params instead aes() mapping. Now aesthetics, x/y variants behave like ggplot2 API. Addresses issue #12. ggside now work better patchwork package. Addresses issue #13. Fixed ‘bug’ computed aesthetics mix well main panels class ContinuousScaleDate. Extended better control XLayer YLayer pull scales proper panels instead using prototype scales plot$scales. Addresses issue #11.","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-010","dir":"Changelog","previous_headings":"","what":"ggside 0.1.0","title":"ggside 0.1.0","text":"CRAN release: 2021-05-17 Various geom_*side* better default calling behavior. See vignettes(\"ggside_aes_mapping\") details. scale_xsidey_continuous scale_xsidey_discrete scale_ysidex_continuous scale_ysidex_discrete Using proper semantic versioning geom_*sidebar geom_*sideboxplot geom_*sidecol geom_*sidedensity geom_*sidefreqpoly geom_*sideline geom_*sidepoint geom_*sidesegement geom_*sidetile geom_*sideviolin Corrected bug geom_*sideviolin returning ggside_layer class Updated vignette(ggside_basic_usage) ‘done’ section headers","code":""},{"path":"https://jtlandis.github.io/ggside/news/index.html","id":"ggside-0013","dir":"Changelog","previous_headings":"","what":"ggside 0.0.1.3","title":"ggside 0.0.1.3","text":"CRAN release: 2021-03-01 Initial CRAN release version","code":""}]
